fresh freshshell/fresh bin/fresh --bin

fresh ctags --file
fresh 'bin/*' --bin

for F in $FRESH_LOCAL/gnupg/* ; do
  N=`basename $F`
  fresh gnupg/$N --file=~/.gnupg/$N
done

for F in $FRESH_LOCAL/sbt/* ; do
  VER=`basename $F`
  fresh sbt/$VER/plugins.sbt --file=~/.sbt/$VER/plugins/plugins.sbt --ignore-missing
  fresh sbt/$VER/user.sbt --file=~/.sbt/$VER/user.sbt --ignore-missing
done

fresh powerline/powerline powerline/bindings/tmux/powerline.conf --file=~/.tmux.conf
fresh tmux.conf --file=~/.tmux.conf

fresh powerline --file=~/.config/powerline/
#ln -sf $FRESH_PATH/source/powerline/powerline/powerline/config_files ~/.config/powerline

fresh simonwhitaker/gibo gibo --bin=~/bin/gibo
fresh clvv/fasd fasd --bin=~/bin/fasd
#fresh pasky/speedread speedread --bin=~/bin/speedread

# fresh cyrus-and/gdb-dashboard .gdbinit --file=~/.gdbinit


# All generic X stuff
if command -v Xorg >/dev/null ; then
  fresh 'xresources/*' --file=~/.Xresources
  # fresh gtkrc-2.0 --file
  # fresh gtk-3.0-settings.ini --file=~/.config/gtk-3.0/settings.ini

  fresh edusantana/asciidoc-highlight gedit/asciidoc.lang --file=~/.local/share/gtksourceview-2.0/language-specs/asciidoc.lang
  fresh edusantana/asciidoc-highlight gedit/asciidoc.lang --file=~/.local/share/gtksourceview-3.0/language-specs/asciidoc.lang

  # Not working - https://github.com/ryanoasis/nerd-fonts/issues/270 NERD_FONT_VERSION=v2.0.0
  NERD_FONT_VERSION=v1.2.0
  NERD_FONT_PATH=$FRESH_LOCAL/nerd-fonts/$NERD_FONT_VERSION
  mkdir -p $NERD_FONT_PATH
  for fontname in DejaVuSansMono DroidSansMono SourceCodePro Terminus LiberationMono FiraCode FiraMono RobotoMono ; do
    #fresh ryanoasis/nerd-fonts patched-fonts/$fontname --file=~/.fonts/$fontname/
    if [ ! -f "$NERD_FONT_PATH/$fontname.zip" ] ; then
      echo "Loading $fontname $NERD_FONT_VERSION"
      wget -q -O $NERD_FONT_PATH/$fontname.zip https://github.com/ryanoasis/nerd-fonts/releases/download/${NERD_FONT_VERSION}/${fontname}.zip
      unzip -q -d $NERD_FONT_PATH/$fontname $NERD_FONT_PATH/$fontname.zip
    fi
    fresh nerd-fonts/$NERD_FONT_VERSION/$fontname --file=~/.fonts/$fontname/
  done

  # Jetbrains Mono ttf
  JB_MONO_VERSION=1.0.0
  JB_MONO_PATH=$FRESH_LOCAL/jetbrains-mono/$JB_MONO_VERSION
  if [ ! -f "$JB_MONO_PATH/JetBrainsMono.zip" ] ; then
    echo "Loading Jetbrains mono $JB_MONO_VERSION"
    mkdir -p $JB_MONO_PATH
    wget -q -O $JB_MONO_PATH/JetBrainsMono.zip https://download.jetbrains.com/fonts/JetBrainsMono-$JB_MONO_VERSION.zip
    unzip -q -d $JB_MONO_PATH/JetBrainsMono $JB_MONO_PATH/JetBrainsMono.zip
  fi
  fresh jetbrains-mono/$JB_MONO_VERSION/JetBrainsMono --file=~/.fonts/jetbrains-mono/
fi


if command -v git >/dev/null ; then
  fresh 'git/*' --file=~/.gitconfig
  VERSION=`git --version | sed "s/^.* //"`
  V=(${VERSION//./ })
  fresh git-${V[0]} --file=~/.gitconfig --ignore-missing
  fresh git-${V[0]}.${V[1]} --file=~/.gitconfig --ignore-missing
  fresh jeffkaufman/icdiff icdiff --bin=~/bin/icdiff
  fresh jeffkaufman/icdiff git-icdiff --bin=~/bin/git-icdiff
fi


if command -v i3 > /dev/null ; then
  fresh i3config --file=~/.i3/config
  fresh i3status --file=~/.i3/i3status.conf
fi


if command -v awesome > /dev/null ; then
  fresh awesome --file=~/.config/awesome/
fi


if command -v urxvt > /dev/null ; then
  fresh muennich/urxvt-perls clipboard --file=~/.urxvt/ext/clipboard
fi


if command -v vim > /dev/null ; then
  fresh SpaceVim/SpaceVim . --file=~/.vim/
  fresh spacevim --file=~/.SpaceVim.d/
fi


#if command -v emacs > /dev/null ; then
#  fresh syl20bnr/spacemacs . --file=~/.emacs.d/
#  if command -v csplit > /dev/null ; then
#    if [ -e ~/.spacemacs ] ; then
#      rm -f $FRESH_LOCAL/spacemacs/spacemacs00
#      csplit -s -f $FRESH_LOCAL/spacemacs/spacemacs ~/.spacemacs '%;; auto-generate custom variable definitions.%+1'
#    fi
#    fresh spacemacs/spacemacs --file=~/.spacemacs
#    if [ -f $FRESH_LOCAL/spacemacs/spacemacs00 ] ; then
#      fresh spacemacs/spacemacs00 --file=~/.spacemacs
#    fi
#  else
#    ln -sf ~/.dotfiles/spacemacs/spacemacs ~/.spacemacs
#  fi
#fi


if command -v zsh > /dev/null ; then
  mkdir -p $HOME/.oh-my-zsh-custom
  for i in $FRESH_LOCAL/zsh-custom/* ; do
    NAME=`basename $i`
    fresh zsh-custom/$NAME --file=~/.oh-my-zsh-custom/$NAME
  done
  ZSH_VERSION=`zsh --version | cut -d " " -f 2`
  if  [[ ${ZSH_VERSION:0:1} -lt 5 ]] ; then
    fresh bhilburn/powerlevel9k . --file=~/.oh-my-zsh-custom/powerlevel/
  else
    fresh romkatv/powerlevel10k . --file=~/.oh-my-zsh-custom/powerlevel/
    chmod +x $HOME/.oh-my-zsh-custom/powerlevel/gitstatus/bin/* || true
  fi
  fresh 'zsh/[0-9]*' --file=~/.zshrc
  fresh robbyrussell/oh-my-zsh oh-my-zsh.sh --file=~/.zshrc
  fresh simonwhitaker/gibo shell-completions/gibo-completion.zsh --file=~/.zshrc

  # Aliases if a given command exists
  for i in $FRESH_LOCAL/zsh/cmd-* ; do
    CMD=`basename $i`
    CMD=${CMD#cmd-}
    if command -v $CMD > /dev/null ; then
      fresh zsh/cmd-$CMD --file=~/.zshrc
    fi
  done
fi


fresh_after_build() {
  # cd $FRESH_PATH/source/Lokaltog/powerline
  # python setup.py install --user >/dev/null
  pip install --user --editable=$FRESH_PATH/source/powerline/powerline
  ln -sf $HOME/.local/bin/powerline* $HOME/bin/

  if [[ -f $HOME/.spacemacs ]] ; then
    chmod u+w $HOME/.spacemacs
  fi

  if ! [[ -f $HOME/.tmux.conf.local ]] ; then
    touch $HOME/.tmux.conf.local
  fi
}

