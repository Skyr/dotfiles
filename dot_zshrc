# Path to your oh-my-zsh configuration.
export ZSH=$HOME/.oh-my-zsh
export ZSH_CUSTOM=$HOME/.oh-my-zsh-custom
export ZSH_CACHE_DIR=$HOME/.cache/oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#export ZSH_THEME="robbyrussell"
#export ZSH_THEME="gentoo"
#ZSH_THEME="eye_scarab_pl"  # Needs plugin vi-mode
#ZSH_THEME="agnoster"
#ZSH_THEME="kphoen"

POWERLEVEL9K_MODE=nerdfont-complete
POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND=white
POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND=grey35
POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND=white
POWERLEVEL9K_CONTEXT_REMOTE_BACKGROUND=blue
POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND=white
POWERLEVEL9K_CONTEXT_ROOT_BACKGROUND=darkred
POWERLEVEL9K_CONTEXT_SUDO_FOREGROUND=white
POWERLEVEL9K_CONTEXT_SUDO_BACKGROUND=darkred
POWERLEVEL9K_CONTEXT_REMOTE_SUDO_FOREGROUND=white
POWERLEVEL9K_CONTEXT_REMOTE_SUDO_BACKGROUND=darkred
POWERLEVEL9K_DIR_ETC_FOREGROUND=grey78
POWERLEVEL9K_DIR_ETC_BACKGROUND=grey50
POWERLEVEL9K_DIR_HOME_FOREGROUND=grey78
POWERLEVEL9K_DIR_HOME_BACKGROUND=grey50
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND=grey78
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND=grey50
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND=grey78
POWERLEVEL9K_DIR_DEFAULT_BACKGROUND=grey50
POWERLEVEL9K_VCS_CLEAN_FOREGROUND=grey78
POWERLEVEL9K_VCS_CLEAN_BACKGROUND=grey35
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=white
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND=grey35
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=white
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND=grey35

POWERLEVEL9K_SHORTEN_DIR_LENGTH=3
POWERLEVEL9K_SHORTEN_STRATEGY=truncate_from_right
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status virtualenv root_indicator background_jobs vcs)

ZSH_THEME="powerlevel/powerlevel9k"
# Set to this to use case-sensitive completion
# export CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# export DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# export DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# export DISABLE_AUTO_TITLE="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(zsh-syntax-highlighting zsh-autosuggestions history-substring-search git gitfast gradle tmux zsh-navigation-tools colored-man-pages docker mosh jump kubectl helm oc direnv)
# github disabled

if ls "~/.ssh/id*.pub" > /dev/null 2>&1 ; then
  SSH_KEYS=""
  for i in ~/.ssh/*.pub ; do
    if [[ -f ${i%.pub} ]] ; then
      SSH_KEYS="$SSH_KEYS ${i%.pub}"
    fi
  done
  if [[ -z "$SSH_KEYS" ]] ; then
    zstyle :omz:plugins:ssh-agent identities $SSH_KEYS
  fi
fi

#if [ "$TERM"=="rxvt" ] && [ -e /usr/share/terminfo/r/rxvt-unicode-256color ]; then
#	export TERM="rxvt-unicode-256color"
#fi
if [[ "$TERM" == "rxvt" ]] && [[ -e /usr/share/terminfo/r/rxvt-256color ]]; then
  export TERM="rxvt-256color"
fi
if [[ "$TERM" == "rxvt-256color" ]] && ! [[ -e /usr/share/terminfo/r/rxvt-256color ]]; then
  export TERM="rxvt"
fi
if [[ "$TERM" == "rxvt" ]] && ! [[ -e /usr/share/terminfo/r/rxvt ]]; then
  export TERM="xterm"
fi
if [[ "$TERM" == "xterm" ]] && [[ -e /usr/share/terminfo/x/xterm-256color ]]; then
  export TERM="xterm-256color"
fi

#if [ -z "$GPG_AGENT_INFO" ] || [ ! -e "$GPG_AGENT_INFO" ] ; then
#  if [ -f "${HOME}/.gpg-agent-info" ]; then
#    . "${HOME}/.gpg-agent-info"
#    if ! ps -p $SSH_AGENT_PID >/dev/null ; then
#      gpg-agent --daemon --enable-ssh-support > /dev/null
#      . "${HOME}/.gpg-agent-info"
#    fi
#  fi
#  export GPG_AGENT_INFO
#  export SSH_AUTH_SOCK
#fi

alias du1="du -hs *(/)"


export FZF_DEFAULT_OPTS="--no-mouse --height 50% -1 --reverse --multi --preview '[[ \$(file --mime {}) =~ binary ]] && echo {} is a binary file || (bat --style=numbers --color=always {} || cat {}) 2> /dev/null | head -200' --preview-window='right:hidden:wrap' --bind='f2:toggle-preview,f3:execute(bat --style=numbers {} || less -f {}),ctrl-d:half-page-down,ctrl-u:half-page-up,ctrl-a:select-all,ctrl-r:toggle-all'"
export FZF_DEFAULT_COMMAND="git ls-files --cached --others --exclude-standard || fd -type f -type l"
export FZF_CTRL_T_COMMAND="fd $FD_OPTIONS"
export FZF_ALT_C_COMMAND="fd --type d $FD_OPTIONS"

if [[ -z "$XDG_CONFIG_HOME" ]] ; then
  export XDG_CONFIG_HOME=$HOME/.config
fi

if ! echo $PATH | grep ":$HOME/.local/bin" > /dev/null ; then
  export PATH="$PATH:$HOME/.local/bin"
fi
if ! echo $PATH | grep ":$HOME/.sharedconfig/local/bin" > /dev/null ; then
  export PATH="$PATH:$HOME/.sharedconfig/local/bin"
fi


# Plugins dependent on installed software
if command -v fzf > /dev/null ; then
  plugins+=(fzf fzf-tab)
  source ~/.oh-my-zsh-custom/fzf-git.sh
fi
if command -v zoxide > /dev/null ; then
  plugins+=(zoxide)
fi

if command -v starship > /dev/null ; then
  # Use starship prompt if possible
  plugins+=(starship)
fi

if command -v navi > /dev/null ; then
  source <(navi widget zsh)
fi


# Locale
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_NUMERIC=de_DE.UTF-8
export LC_TIME=de_DE.UTF-8
export LC_COLLATE=de_DE.UTF-8
export LC_MONETARY=de_DE.UTF-8
export LC_MESSAGES=en_US.UTF-8
export LC_PAPER=de_DE.UTF-8
export LC_NAME=de_DE.UTF-8
export LC_ADDRESS=de_DE.UTF-8
export LC_TELEPHONE=de_DE.UTF-8
export LC_MEASUREMENT=de_DE.UTF-8
export LC_IDENTIFICATION=de_DE.UTF-8


[ -f ~/.zshrc.local ] && source $HOME/.zshrc.local

DISABLE_AUTO_UPDATE="true"
source $HOME/.oh-my-zsh/oh-my-zsh.sh


### Overrides for zsh

if ! command -v zoxide > /dev/null && command -v fzf > /dev/null ; then
  # Thanks to https://www.gregorykapfhammer.com/software/tool/productivity/2017/05/08/Directory-Zooming/
  t() {
    fasdlist=$( fasd -d -l -r $1 | \
      fzf --query="$1 " --select-1 --exit-0 --height=25% --reverse --tac --no-sort --cycle) &&
      cd "$fasdlist"
  }

  # Thanks to https://www.reddit.com/r/commandline/comments/cwrioy/for_fasd_fzf_users_universal_v_vd_and_z_functions/
  alias v >/dev/null && unalias v
  alias vd >/dev/null && unalias vd
  alias z >/dev/null && unalias z

  # edit given file or search in recently used files
  function v {
      local file
      # if arg1 is a path to existing file then simply open it in the editor
      test -e "$1" && $EDITOR "$@" && return
      # else use fasd and fzf to search for recent files
      file="$(fasd -Rfl "$*" | fzf -1 -0 --no-sort +m)" && $EDITOR "${file}" || $EDITOR "$@"
  }

  # cd into the directory containing a recently used file
  function vd {
      local dir
      local file
      file="$(fasd -Rfl "$*" | fzf -1 -0 --no-sort +m)" && dir=$(dirname "$file") && cd "$dir"
  }

  # cd into given dir or search in recently used dirs
  function z {
      [ $# -eq 1 ] && test -d "$1" && cd "$1" && return
      local dir
      dir="$(fasd -Rdl "$*" | fzf -1 -0 --no-sort +m)" && cd "${dir}" || return 1
  }
fi


# Aliases dependent on installed software
if command -v bat > /dev/null ; then
  alias cat='bat --style header --style rule --style snip --style changes --style header'
elif command -v batcat > /dev/null ; then
  alias cat='batcat --style header --style rule --style snip --style changes --style header'
fi

export EDITOR=`(which nvim || which vim || which vi || which nano) | grep "^/"`

if command -v exa > /dev/null ; then
  alias exa='exa -lghH --git --color-scale'
  alias l="exa -aa"
  alias l.="exa -d .*"
  alias la="exa -a"
  alias ll="exa"
  alias lsa="exa -aa"
fi

if command -v eza > /dev/null ; then
  alias exa='eza -lghH --git --color-scale'
  alias eza='eza -lghH --git --color-scale'
  alias l="eza -aa"
  alias l.="eza -d .*"
  alias la="eza -a"
  alias ll="eza"
  alias lsa="eza -aa"
fi

if command -v lsd > /dev/null ; then
  alias ls="lsd"
  alias l="lsd -A"
  alias l.="lsd -d .*"
  alias la="lsd -a"
  alias ll="lsd -l"
  alias lsa="lsd -A"
fi

if [ -e /home/sts/.nix-profile/etc/profile.d/nix.sh ]; then . /home/sts/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

